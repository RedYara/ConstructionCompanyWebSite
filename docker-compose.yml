services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
  web:
    build:
      context: .
      dockerfile: ./Web/Dockerfile
    ports:
      - "80:80"
    environment:
      POSTGRES_CONNECTION_STRING: "Host=db;Port=5432;Database=${POSTGRES_DATABASE};Username=${POSTGRES_USERNAME};Password=${POSTGRES_PASSWORD};IncludeErrorDetail=${ASPNET__INCLUDE_ERROR_DETAIL};CommandTimeout=${ASPNET__COMMAND_TIMEOUT}"
      ASPNETCORE_HTTP_PORTS: 80
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    volumes:
      - identitydata:/root/.aspnet/DataProtection-Keys
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
  identitydata:
